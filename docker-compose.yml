services:
  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: postgrespw
    ports:
      - 5432:5432
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
        - 27017:27017
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  redis:
    depends_on:
      - postgres
    image: redis/redis-stack-server:latest
  # Services
  notify-svc:
    depends_on:
      - mongodb
      - rabbitmq
    image: realshinchoku/ddhc-notify-svc
    build:
      context: .
      dockerfile: services/NotificationService/Dockerfile
    ports:
      - 7004:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=mongodb://root:mongopw@mongodb:27017
      - RabbitMq__Host=rabbitmq
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email
  ow-svc:
    depends_on:
      - mongodb
      - rabbitmq
    image: realshinchoku/ddhc-ow-svc
    build:
      context: .
      dockerfile: services/OWAdministrativeService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=mongodb://root:mongopw@mongodb:27017
      - RabbitMq__Host=rabbitmq
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email
    volumes:
      - images:/app/wwwroot/images
  attendance-svc:
    depends_on:
      - mongodb
      - rabbitmq
    image: realshinchoku/ddhc-attendance-svc
    build:
      context: .
      dockerfile: services/AttendanceService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=mongodb://root:mongopw@mongodb:27017
      - RabbitMq__Host=rabbitmq
      - StudentServiceUrl=http://student-svc
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email

  student-svc:
    depends_on:
      - rabbitmq
      - redis
      - postgres
    image: realshinchoku/ddhc-student-svc
    build:
      context: .
      dockerfile: services/StudentService/Dockerfile
    ports:
      - 7001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=InfoSudent;
      - RabbitMq__Host=rabbitmq
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email
      - CacheOption=Redis
      - Redis__Host=redis
      - Redis__Port=6379
      - Redis__SerializerName=Pack
  # Gateways
  mobile-gateway:
    image: realshinchoku/ddhc-mobile-gateway
    build:
      context: .
      dockerfile: gateways/MobileGateway/Dockerfile
    ports:
      - 6000:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email
  p7-gateway:
    image: realshinchoku/ddhc-p7-gateway
    build:
      context: .
      dockerfile: gateways/P7Gateway/Dockerfile
    ports:
      - 6001:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
  teacher-gateway:
    image: realshinchoku/ddhc-teacher-gateway
    build:
      context: .
      dockerfile: gateways/TeacherGateway/Dockerfile
    ports:
      - 6002:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - AzureAd__Instance=https://login.microsoftonline.com/
      - AzureAd__TenantId=TENANT_ID
      - AzureAd__ClientId=CLIENT_ID
      - AzureAd__ClientSecret=CLIENT_SECRET
      - AzureAd__Scopes=SCOPES
      - DownstreamApi__BaseUrl=https://graph.microsoft.com/v1.0
      - DownstreamApi__Scopes__0=SCOPES
      - DownstreamApi__Scopes__1=openid
      - DownstreamApi__Scopes__2=profile
      - DownstreamApi__Scopes__3=offline_access
      - DownstreamApi__Scopes__4=email
    # Frontends
  p7-client:
    image: realshinchoku/ddhc-p7-client
    build:
      context: .
      dockerfile: frontends/p7-client/Dockerfile
    ports:
      - 3000:80
  teacher-client:
    image: realshinchoku/ddhc-teacher-client
    build:
      context: .
      dockerfile: frontends/teacher-client/Dockerfile
    ports:
      - 3001:80
  # Monitoring
  grafana:
    image: realshinchoku/ddhc-grafana
    ports:
      - "3003:3000"

  prometheus:
    image: realshinchoku/ddhc-prometheus
    restart: always
    ports:
      - 9090:9090
volumes:
  images: